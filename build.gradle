buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    //noinspection GroovyAssignabilityCheck,GroovyAssignabilityCheck,GroovyAssignabilityCheck,GroovyAssignabilityCheck
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}


repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        name "JEI"
        url "http://dvs1.progwml6.com/files/maven"
    }
    //maven {
    //    name = "ic2"
    //    url = "http://maven.ic2.player.to/"
    //}
    maven {
        name "K4Repo"
        url "http://maven.k-4u.nl"
    }
    maven {
        name "AmaRepo"
        url "http://maven.amadornes.com"
    }
    //ivy {
    //   name "BuildCraft"
    //  artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision]-dev.[ext]"
    //}
}


apply plugin: 'net.minecraftforge.gradle.forge'

//noinspection GroovyAssignabilityCheck,GroovyAssignabilityCheck,GroovyAssignabilityCheck,GroovyAssignabilityCheck
dependencies {
    compile "mcp.mobius.waila:Waila:1.7.0-B2_1.9:dev"
    //compile 'net.industrial-craft:industrialcraft-2:2.2.750-experimental:api'
    //compile "pneumaticCraft:PneumaticCraft-1.7.10:1.9.6-93:userdev"
    compile "k4unl:k4lib:1.9-1.0.4:deobf"
    //compile name: "buildcraft", classifier: "dev", version: "7.0.16"
    //compile "igwmod:IGW-Mod-1.8.9:1.2.3-3:userdev"
    deobfCompile "mezz.jei:jei_1.9:3.2.9.184"
    deobfCompile "MCMultiPart:MCMultiPart:1.1.1:universal"
}

allprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

project.ext {
    buildNum = System.getenv("BUILD_NUMBER")
    if (buildNum == null) {
        buildNum = "dev"
    }
    mcVersion = "1.9"
}

version = project.ext.mcVersion + "-3.1." + project.ext.buildNum
group = "k4unl"
archivesBaseName = "HydCraft"

minecraft {
    version = "${project.ext.mcVersion}-12.16.0.1859-1.9"

    // replacing stuff in the source
    replace '@VERSION@', project.version
    replace '@MC_VERSION@', version
    replace '@BUILD_NUMBER@', project.ext.buildNum

    useDepAts = true

    runDir = "../Minecraft/"

    mappings = "snapshot_20160408"
}

// configure the source folders
//noinspection GroovyAssignabilityCheck,GroovyAssignabilityCheck,GroovyAssignabilityCheck,GroovyAssignabilityCheck
sourceSets {
    //noinspection GroovyAssignabilityCheck
    //noinspection GroovyAssignabilityCheck
    //noinspection GroovyAssignabilityCheck
    //noinspection GroovyAssignabilityCheck
    main {
        java {
            srcDir 'java'
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
        resources {
            srcDir 'resources'
            exclude '**/.md' // exclude readme from localization repo
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
    }
    api {
        java {
            srcDir 'api'
        }
    }

}

//noinspection GroovyAssignabilityCheck,GroovyAssignabilityCheck,GroovyAssignabilityCheck,GroovyAssignabilityCheck
processResources
        {
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version
            inputs.property "buildNum", project.ext.buildNum
            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version, 'buildNum': project.ext.buildNum
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
            //This makes sure that it gets run EVERY time
            outputs.upToDateWhen { false }
        }

//noinspection GroovyAssignabilityCheck,GroovyAssignabilityCheck,GroovyAssignabilityCheck,GroovyAssignabilityCheck
jar {
    classifier = "universal"
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output) {
        classifier = "deobf"
    }
}

// Create API library zip
task apiJar(type: Jar) {
    from(sourceSets.main.output) {
        include 'k4unl/minecraft/Hydraulicraft/api/**'

        classifier = "api"
    }
}

apiJar.mustRunAfter deobfJar


artifacts {
    archives deobfJar
    archives apiJar
}

task("uploadJars", dependsOn: "reobf") {
    description = "uploads JARs"
    if (System.getenv("local_maven") != null) {
        apply plugin: 'maven'
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "file://" + System.getenv("local_maven"))
                    pom {
                        groupId = project.group
                        version = project.version
                        artifactId = project.archivesBaseName
                        project {
                            name project.archivesBaseName
                            packaging 'jar'
                            description 'Hydraulicraft'
                            url 'http://Hydraulicrat.eu'
                            scm {
                                url 'https://github.com/K-4U/Hydraulicraft'
                                connection 'scm:git:git@github.com:K-4U/Hydraulicraft.git'
                                developerConnection 'scm:git:git@github.com:K-4U/Hydraulicraft.git'
                            }
                            issueManagement {
                                system 'github'
                                url 'https://github.com/K-4U/Hydraulicraft/issues'
                            }
                            licenses {
                                license {
                                    name 'GPLv3'
                                    url 'https://github.com/K-4U/Hydraulicraft/blob/master/LICENSE'
                                    distribution 'repo'
                                }
                            }
                            developers {
                                developer {
                                    id 'K4Unl'
                                    name 'K4Unl'
                                    roles { role 'developer' }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
